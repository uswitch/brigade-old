apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: {{ $fullname }}
    chart: '{{ .Chart.Name }}-{{ .Chart.Version }}'
    heritage: '{{ .Release.Service }}'
    release: '{{ .Release.Name }}'
    role: controller
  name: {{ $fullname }}
spec:
  progressDeadlineSeconds: 2147483647
  replicas: 1
  revisionHistoryLimit: 2147483647
  selector:
    matchLabels:
      app: {{ $fullname }}
      role: controller
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ $fullname }}
        role: controller
    spec:
      containers:
      - env:
        - name: BRIGADE_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: BRIGADE_WORKER_IMAGE
          value: '{{ .Values.worker.registry }}/{{ .Values.worker.name }}:{{ default
            .Chart.AppVersion .Values.worker.tag }}'
        - name: BRIGADE_WORKER_PULL_POLICY
          value: {{ default "IfNotPresent" .Values.worker.pullPolicy
            }}
        - name: BRIGADE_WORKER_SERVICE_ACCOUNT
          value: {{ default "brigade-worker" .Values.worker.serviceAccount
            }}
        image: '{{ .Values.controller.registry }}/{{ .Values.controller.name }}:{{
          default .Chart.AppVersion .Values.controller.tag }}'
        imagePullPolicy: {{ default "IfNotPresent" .Values.controller.pullPolicy
          }}
        name: {{ .Chart.Name }}
        ports:
        - containerPort: 92427454
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: {{ $fullname }}
      serviceAccountName: {{ $fullname }}
      terminationGracePeriodSeconds: 30
status: {}
